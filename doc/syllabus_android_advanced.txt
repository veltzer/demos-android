Advanced Android for Java Developers
====================================
Audience: Java developers who have developed for the android platform and are
familiar with the Java Programming language to some degree (3 years of experience
in Java, 1 year with Android).

Dalvik
	Differences between dalvik and regular VM
		(what dalvik does not have as opposed to standard VM,
		what makes dalvik special).
	Tuning the dalvik VM (command line args).
	Monitoring the dalvik VM.
Inside the android machine
	advanced adb
	Monitoring via /proc
	killing processes.
	tuning the oom killer
	Bringing in more monitoring tools.
	Network monitoring tools (netstat and more).
Android security
	The basic layout (uids, apps, folders).
	Android file system features.
	sharing data between apps.
		(various methods)
	sdcard access and permissions.
	Networking as client limitations.
	Networking as server limitations.
	Java level permissions.
Interprocess communication
	binder overview
	Intents as IPC
	Using Binder directly.
	AIDL (with exercise).
	Writing an android service (architectural concerns).
Networking with Android
	Using straight networking APIs on android.
	Consuming webservices using ksoap2-android.
	Using HTTP via Apache HttpClient.
	XML and Android
		DOM parsing.
		Sax parsing.
		Pull parser.
	Json parsing with json.org
	Java APIs for Wifi control.
UI
	The UI framework philosophy.
	Review of the various singletons, relationships between them.
	Writing main screen extensions.
	Traversing the container tree.
	Differences between Android MVC and classic MVC (I still don't
		know if I have anything interesting to say here).
	Some advanced MVC techniques.
	Views and XML (how does it work, how to customize).
	Dynamic inflation
	Z order.
	Writing new views.
	Writing new widgets.
The Android Boot sequence
	Boot sequence
	The Android "fork without exec" paradigm.
	Overview of all native services.
	Tweaking the boot process.
The NDK
	Why go native? Advantages, disadvantages.
	Installing the ndk (how)
	Bionic - overview.
	How to write JNI code correctly.
	The details of writing a JNI app on android.
	Exercise writing a small JNI app.
